# Tutorial 

## Introduction

In this tutorial we will assume the development of a tiny application: **The Postcard Galley**. 

There's this artist who designs very fancy postcards. He sells them using his web site. To see it load the following file in your web browser: 

    doc/tutorial/app/index.html 

The application has only three pages. The postcards are located in the very homepage. A visitor interested in buying a few of them can drag them to the selection area on the right. Clicking on 'Buy' the visitor is presented with a form where he should provide contact info. Finally, after submitting the form, the visitor will see a thank-you-page.

It isn't a completely automated sales process. But, it's enough for the purposes of this tutorial. Oh, it's not completely functional either, but you'll get the picture.

## Tests

There are two sets of tests for this application. One of them uses Selenium Poetry while the other uses just regular Selenium commands. Both sets test the same aspects of the application, but you'll see that there's a dramatic improvement in test readability when Selenium Poetry is used, compared with the regular Selenium version.

The tests are located in the directories:

    doc/tutorial/test/selenium_poetry
    doc/tutorial/test/selenium_regular

### Testing the homepage

Let's begin with the tests for the homepage. Look at the file:

    doc/tutorial/test/selenium_poetry/index.rsel

Take a moment and try to read it all. As you go, try to figure out what the purpose of the test is. 

Are you done? Then, let's move on. Open the file:

    doc/tutorial/test/selenium_regular/index.rsel
    
This file tests the very same things as the previous one. But, boy, what a difference! Isn't that much more confusing and polluted?

The source of the problem is the use of XPath selectors in the same file where we place the test actions. To understand that, let's forget about Selenium mechanics for a moment. Say we're just writing a test script on a piece of paper. We'd probably write things like these:

* Check if there's a heading with the content: Postcard Gallery
* Check if there's a postcard of Rio de Janeiro
* Check if there's a postcard of Recife
* Check if there are four postcards

This is straightforward and easy to communicate to anyone else, except the computer. It demands more precision from ourselves. It wants to know what part of the HTML are we referring to. That's why we must use XPath selectors, or any kind of selector that Selenium would allow.



Norway - Ken Douglas
Rio de Janeiro - DaniÃ«l Silveira  
Recife - Antonio Serra
LittleBoy - Marcus Correa
  
